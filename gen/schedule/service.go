// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// schedule service
//
// Command:
// $ goa gen github.com/jaredwarren/rg/design

package schedule

import (
	"context"
)

// The Alarm schedule service.
type Service interface {
	// List all stored bottles
	List(context.Context) (res []*Schedule, err error)
	// create new cron schedule
	Create(context.Context, *SchedulePayload) (res *Schedule, err error)
	// Remove cron schedule
	Remove(context.Context, *RemovePayload) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "schedule"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"list", "create", "remove"}

// SchedulePayload is the payload type of the schedule service create method.
type SchedulePayload struct {
	// Descriptive Name
	Name string
	// Valid cron string
	Cron string
	// color to set
	Color string
	// next time
	Next string
}

// Schedule is the result type of the schedule service create method.
type Schedule struct {
	// ID is the unique id of the schedule.
	ID string
	// Descriptive Name
	Name string
	// Valid cron string
	Cron string
	// color to set
	Color string
	// next time
	Next string
}

// RemovePayload is the payload type of the schedule service remove method.
type RemovePayload struct {
	ID string
}

// NotFound is the type returned when attempting to show or delete a bottle
// that does not exist.
type NotFound struct {
	// Message of error
	Message string
	// ID of missing bottle
	ID string
}

// Error returns an error description.
func (e *NotFound) Error() string {
	return "NotFound is the type returned when attempting to show or delete a bottle that does not exist."
}

// ErrorName returns "NotFound".
func (e *NotFound) ErrorName() string {
	return e.Message
}
