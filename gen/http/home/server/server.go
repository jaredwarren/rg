// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// home HTTP server
//
// Command:
// $ goa gen github.com/jaredwarren/rg/design

package server

import (
	"context"
	"net/http"
	"path"
	"strings"

	home "github.com/jaredwarren/rg/gen/home"
	goahttp "goa.design/goa/http"
)

// Server lists the home service endpoint HTTP handlers.
type Server struct {
	Mounts []*MountPoint
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the design.
type ErrorNamer interface {
	ErrorName() string
}

// MountPoint holds information about the mounted endpoints.
type MountPoint struct {
	// Method is the name of the service method served by the mounted HTTP handler.
	Method string
	// Verb is the HTTP method used to match requests to the mounted handler.
	Verb string
	// Pattern is the HTTP request path pattern used to match requests to the
	// mounted handler.
	Pattern string
}

// New instantiates HTTP handlers for all the home service endpoints.
func New(
	e *home.Endpoints,
	mux goahttp.Muxer,
	dec func(*http.Request) goahttp.Decoder,
	enc func(context.Context, http.ResponseWriter) goahttp.Encoder,
	eh func(context.Context, http.ResponseWriter, error),
) *Server {
	return &Server{
		Mounts: []*MountPoint{
			{"static/favicon.ico", "GET", "/favicon.ico"},
			{"static/", "GET", "/static"},
			{"static/index.html", "GET", "/home"},
		},
	}
}

// Service returns the name of the service served.
func (s *Server) Service() string { return "home" }

// Use wraps the server handlers with the given middleware.
func (s *Server) Use(m func(http.Handler) http.Handler) {
}

// Mount configures the mux to serve the home endpoints.
func Mount(mux goahttp.Muxer) {
	MountStaticFaviconIco(mux, http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		http.ServeFile(w, r, "static/favicon.ico")
	}))
	MountStatic(mux, http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		upath := path.Clean(r.URL.Path)
		rpath := upath
		if strings.HasPrefix(upath, "/static") {
			rpath = upath[7:]
		}
		http.ServeFile(w, r, path.Join("static/", rpath))
	}))
	MountStaticIndexHTML(mux, http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		http.ServeFile(w, r, "static/index.html")
	}))
}

// MountStaticFaviconIco configures the mux to serve GET request made to
// "/favicon.ico".
func MountStaticFaviconIco(mux goahttp.Muxer, h http.Handler) {
	mux.Handle("GET", "/favicon.ico", h.ServeHTTP)
}

// MountStatic configures the mux to serve GET request made to "/static".
func MountStatic(mux goahttp.Muxer, h http.Handler) {
	mux.Handle("GET", "/static/", h.ServeHTTP)
	mux.Handle("GET", "/static/*filename", h.ServeHTTP)
}

// MountStaticIndexHTML configures the mux to serve GET request made to "/home".
func MountStaticIndexHTML(mux goahttp.Muxer, h http.Handler) {
	mux.Handle("GET", "/home", h.ServeHTTP)
}
