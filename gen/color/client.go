// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// color client
//
// Command:
// $ goa gen github.com/jaredwarren/rg/design

package color

import (
	"context"

	goa "goa.design/goa"
)

// Client is the "color" service client.
type Client struct {
	UpdateEndpoint goa.Endpoint
	ColorEndpoint  goa.Endpoint
}

// NewClient initializes a "color" service client given the endpoints.
func NewClient(update, color goa.Endpoint) *Client {
	return &Client{
		UpdateEndpoint: update,
		ColorEndpoint:  color,
	}
}

// Update calls the "update" endpoint of the "color" service.
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (err error) {
	_, err = c.UpdateEndpoint(ctx, p)
	return
}

// Color calls the "color" endpoint of the "color" service.
func (c *Client) Color(ctx context.Context) (res *Color, err error) {
	var ires interface{}
	ires, err = c.ColorEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*Color), nil
}
